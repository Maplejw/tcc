异常情况分析
1.2种情况全局事务状态可能为0以及对应的处理方式
a.当获取全局事务ID失败（TCC中心生成了事务ID，但是还没返回就挂了或者业务端获取超时了又或者业务端挂了）
-tcc定时轮询全局事务表，轮询未发送的消息，如果有状态=0，通知各个业务进行cancel,各业务要注意空回滚
b.获取全局事务成功，然后执行各个业务逻辑一半，服务器挂了或者业务逻辑执行完毕但是通知TCC的时候挂了，没通知成功
-tcc定时轮询全局事务表，轮询未发送的消息，如果有状态=0，通过各个业务进行cancel,各业务要注意空回滚

2.全局事务状态为确认或者取消的对应处理方式
a.通知tcc全局事务状态更改为确认或取消，tcc消息未发送出去然后挂了
-tcc全局事务表设置是否发送消息的状态值，轮询未发送的消息，根据全局事务状态进行补发确认还是取消
-tcc需要做到防止同一个事务2次通知的幂等性处理，可以避免出现首次通知确认提交，再次通知确认回滚的情况
update tcc_transcation set status=xxx where transcation_no=xxx and status=0


b.通知成功，全局事务状态更改为确认或取消，消息发送出去然后挂了
-tcc需要做到防止同一个事务2次通知的幂等性处理
update tcc_transcation set status=xxx where transcation_no=xxx and status=0


3.当轮询和通知（有可能程序处理的慢）同时过来时候，需要做到防止消息二次发送
a.通知提交，轮询回滚,无论哪个先后都需要做到防止消息二次发送
-通过update tcc_transcation set status=xxx where transcation_no=xxx and status=0的影响行数来做到防止消息二次发送
b.通知提交，通知早于轮询，发送kafka挂了，轮询回滚，这个时候轮询没更改事务状态成功，但是把消息发送状态改为已发送(要处理为不能更改)，实际未发送
-通过update tcc_transcation set status=xxx where transcation_no=xxx and status=0的影响行数来做到防止消息二次发送且只有修改事务状态成功才能对消息的发送状态进行更改


4.当业务逻辑处理库存、积分，库存预处理完毕，然后程序阻塞(可用sleep(100秒)来模拟),这时预处理积分还未执行。
而TCC中心定时轮询全局事务开始执行，发现这个事务还是初始化状态，就会通知参与者取消，库存系统会进行回滚操作。
但是这个时候积分库还未处理，会进行空回滚，而当100秒sleep结束后，会进行预处理积分，导致积分被扣，状态初始化，造成数据不一致。
a.各个业务也需要配置个定时任务轮训业务事务表，进行轮训回滚
b.不处理的话就是进行人工对账
c.通过业务确认方将事务隔离级别更改为READ_COMMITTED以及业务表需要对事务ID进行唯一索引创建。
通知判断业务是否有这个事务ID，没有的话则写入。这个时候就看是业务先写进去还是通知先写进去这个事务ID，如果通知先写进去，业务则会抛唯一索引，自动会回滚。如果业务先写进去，则通知会捕获唯一索引，然后进行回滚操作。由于通知先查了未有数据，然后再写遇到业务先写进去，这个时候遇到唯一索引异常，通知再去查询，如果不是READ_COMMITTED事务隔离级别会查询不到数据，因此需要更改为READ_COMMITTED隔离级别，才能查询到数据，然后回滚数据。
-----------------------------------------------------


大型订单数据库的分库分表
订单号的生成方式
日期+用户ID+(商家ID)可选 + XXXX
订单库
分为前端订单库
前端需要做到用户查询自己的订单可以快速定位到所在的表
1.简单点就是直接按用户ID分表
2.复杂点就是在用户ID基础上再进行日期分表，如按年分表(滴滴顺风车订单是按月分表)，这样查询数据的需要带上对应的日期

平台订单库
后端只需要做到根据日期或者订单号直接可以定位到所在的表
1.只需按日期分表如按月分表，这样查询的时候都要带上对应的日期


商家订单库
商家后台只需要可以根据日期或者订单到直接定位到所在的表
1.简单点就是直接根据商家ID分表
2.复杂点就是在商家ID基础上再进行日期分表，如按年分表(滴滴顺风车订单是按月分表)，这样查询数据的需要带上对应的日期

备注:
1.所有的关于订单操作都只能通过对订单微服务进行调用，对前端订单库进行操作
2.通过使用数据库同步服务，可以通过canal同步前端订单库的binglog进行数据异构，生成到平台订单库和商家订单库
3.使用canal需要注意消息的有序性，如订单需要根据订单号进行分区，保证同一笔订单的所有CURD操作都落在同一个分区
4.canal使用default-instance保证元数据存储使用zk,这样当集群意外宕机，保证启动后，会从zk获取上一次binglog的消费位置，进行重新消费


